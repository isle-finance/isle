# Full reference https://github.com/foundry-rs/foundry/tree/master/config

[profile.default]
    auto_detect_solc = false
    block_timestamp = 1_680_220_800 # March 31, 2023 at 00:00 GMT
    bytecode_hash = "none"
    cbor_metadata = false
    evm_version = "paris"
    gas_reports = [
        "PoolConfigurator",
        "Pool",
        "LoanManager",
        "WithdrawalManager",
        "PoolAddressesProvider",
        "Receivable",
        "IsleGlobals"
    ]
    fs_permissions = [{ access = "read", path = "out-optimized" }]
    optimizer = true
    optimizer_runs = 1_000
    out = "out"
    script = "scripts"
    src = "contracts"
    libs = ["modules"]
    test = "tests"
    sender = "0xBbC9928618b05356841a8565C72E4493D12ad163"
    solc_version = "0.8.19"
    verbosity = 2

[profile.default.fuzz]
    max_test_rejects = 1_000_000 # Number of times `vm.assume` can fail
    runs = 50

# Speed up compilation and tests during development
[profile.lite]
    optimizer = false

# Test the optimized contracts without re-compiling them
[profile.test-optimized]
    src = "tests"

# Compile only the production code and the test mocks with via IR
[profile.optimized]
    out = "out-optimized"
    test = "tests/mocks"
    via_ir = true

[profile.ci]
    fuzz = { runs = 10_000 }
    verbosity = 4


[etherscan]
# arbitrum_one = { key = "${API_KEY_ARBISCAN}" }
# avalanche = { key = "${API_KEY_SNOWTRACE}" }
# bnb_smart_chain = { key = "${API_KEY_BSCSCAN}" }
# gnosis_chain = { key = "${API_KEY_GNOSISSCAN}" }
goerli = { key = "${API_KEY_ETHERSCAN}" }
mainnet = { key = "${API_KEY_ETHERSCAN}" }
# optimism = { key = "${API_KEY_OPTIMISTIC_ETHERSCAN}" }
# polygon = { key = "${API_KEY_POLYGONSCAN}" }
sepolia = { key = "${API_KEY_ETHERSCAN}" }
linea-mainnet = { key = "${API_KEY_LINEASCAN}", url = "https://api.lineascan.build/api" }
linea-testnet = { key = "${API_KEY_LINEASCAN}", url = "https://api-testnet.lineascan.build/api" }
base-goerli = { key = "${API_KEY_BASESCAN}", url = "https://api-goerli.basescan.org/api" }

[fmt]
bracket_spacing = true
int_types = "long"
line_length = 120
multiline_func_header = "all"
number_underscore = "thousands"
quote_style = "double"
tab_width = 4
wrap_comments = true

[rpc_endpoints]
arbitrum_one = "https://arbitrum-mainnet.infura.io/v3/${API_KEY_INFURA}"
avalanche = "https://avalanche-mainnet.infura.io/v3/${API_KEY_INFURA}"
bnb_smart_chain = "https://bsc-dataseed.binance.org"
gnosis_chain = "https://rpc.gnosischain.com"
goerli = "https://goerli.infura.io/v3/${API_KEY_INFURA}"
localhost = "http://localhost:8545"
optimism = "https://optimism-mainnet.infura.io/v3/${API_KEY_INFURA}"
polygon = "https://polygon-mainnet.infura.io/v3/${API_KEY_INFURA}"
sepolia = "https://eth-sepolia.g.alchemy.com/v2/${API_KEY_ALCHEMY}"
mainnet = "https://eth-mainnet.g.alchemy.com/v2/${API_KEY_ALCHEMY}"
linea-mainnet = "https://linea.infura.io/v3/${API_KEY_INFURA}"
linea-testnet = "https://linea-goerli.infura.io/v3/${API_KEY_INFURA}"
base-goerli = "https://base-goerli.infura.io/v3/${API_KEY_INFURA}"
